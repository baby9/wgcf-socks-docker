# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build & Release

on:
  release:
    types: [published] # 表示在发布新的 Release 时触发

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # checkout 代码
      - uses: actions/setup-go@v4 # 配置 Go 环境
        with:
          go-version: "1.20"

      - name: Build
        run: |
          cd build
          go mod init WarpRegister
          go mod tidy
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o output/WarpRegister-linux-amd64 -ldflags '-s -w -extldflags "-static"'
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o output/WarpRegister-linux-arm64 -ldflags '-s -w -extldflags "-static"'
          CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -o output/WarpRegister-linux-arm -ldflags '-s -w -extldflags "-static"'
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o output/WarpRegister-darwin-arm64 -ldflags '-s -w -extldflags "-static"'
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o output/WarpRegister-darwin-amd64 -ldflags '-s -w -extldflags "-static"'
          CGO_ENABLED=0 GOOS=windows GOARCH=arm64 go build -o output/WarpRegister-windows-arm64 -ldflags '-s -w -extldflags "-static"'
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o output/WarpRegister-windows-amd64 -ldflags '-s -w -extldflags "-static"'
          CGO_ENABLED=0 GOOS=android GOARCH=arm64 go build -o output/WarpRegister-android-arm64 -ldflags '-s -w -extldflags "-static"'
      
      - name: Release
        uses: softprops/action-gh-release@v1 # 将可执行文件 release 上去
        with:
          files: |
            build/output/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
