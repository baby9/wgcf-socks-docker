# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build & Release

on:
  release:
    types: [published] # Triggered in new release

jobs:
  run:
    strategy:
      matrix:
        include:
          # linux
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: 386
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: mips64
          - goos: linux
            goarch: mips64le
          - goos: linux
            goarch: mipsle
          - goos: linux
            goarch: mips
          - goos: linux
            goarch: s390x
          - goos: linux
            goarch: riscv64
          # windows
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: 386
          - goos: windows
            goarch: arm64
          - goos: windows
            goarch: arm
            goarm: 7
          # darwin
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          # android
          - goos: android
            goarch: arm64
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Download dependencies
        run: |
          cd build
          go mod init WarpRegister
          go mod tidy

      - name: Build
        run: |
          cd build
          go build -o output/WarpRegister-$GOOS-$GOARCH -ldflags '-s -w -extldflags "-static"'
      
      - name: Release
        uses: softprops/action-gh-release@v1 # Upload executable files to release
        with:
          files: |
            build/output/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
